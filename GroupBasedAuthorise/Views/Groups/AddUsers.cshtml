@model GroupBasedAuthorise.Models.AddUserToGroupViewModel

@{
    ViewBag.Title = "AddUsers";
    var usersCount = 1;
}

<h2>Add Users</h2>
@using (Html.BeginForm())
{
    <div class="form-horizontal">
        <h4>Add users to group</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.GroupId)
        <div id="users-container">
            <div class="form-group">
                @Html.LabelFor(model => model.UsersEmails, htmlAttributes: new { @class = "control-label col-md-2" })
                <label class="control-label col-md-2">#@(usersCount)</label>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.UsersEmails, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UsersEmails, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        @*<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button id="add-user" class="btn btn-default" >
                    Add one more user
                </button>
            </div>
        </div>*@
        <div class="form-group">
            <div class="pull-right">
                <input type="submit" value="Add this users to the group" class="btn btn-default" />
            </div>
        </div>
    </div>
}
@*<script type="text/javascript">
    $(document, "ready", function () {
        @if (usersCount <= 10)
            {
                <text>
        $("#add-user").on("click", function () {
            $("#user-container").append('<div class="form-group">'
                + '<label class="control-label col-md-2">'
                + @(usersCount + 1) + '</label>'
                + '<div class="col-md-10">'
                + '@Html.Raw(HttpUtility.JavaScriptStringEncode(Html.EditorFor(model => model.UsersEmails[usersCount], new { htmlAttributes = new { @class = "form-control" } }).ToHtmlString()))'
                + '@Html.Raw(HttpUtility.JavaScriptStringEncode(Html.ValidationMessageFor(model => model.UsersEmails[usersCount], "", new { @class = "text-danger" }).ToHtmlString()))'
                + '</div></div>')
            @{
                    usersCount++;
                }
        });
        </text>
            }
    });
</script>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")    
}
